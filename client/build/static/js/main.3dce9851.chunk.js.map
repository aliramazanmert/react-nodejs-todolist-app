{"version":3,"sources":["redux/todos/api.js","redux/todos/actions.js","redux/allActionTypes.js","pages/TodoList/components/CardHeader/styles.js","pages/TodoList/components/CardHeader/index.jsx","pages/TodoList/components/UpdateForm/index.jsx","pages/TodoList/components/Card/styles.js","pages/TodoList/components/Card/index.jsx","pages/TodoList/styles.js","pages/TodoList/index.jsx","pages/TodoList/components/Form/index.jsx","App.js","serviceWorker.js","redux/todos/reducer.js","redux/configureStore.js","index.js"],"names":["getTodos","dispatch","axios","get","then","res","type","payload","data","catch","error","Promise","reject","Container","styled","div","CardHeader","props","CloseCircleTwoTone","twoToneColor","completed","style","fontSize","defaultChecked","onChange","switchStatus","CheckCircleTwoTone","UpdateForm","onFinish","values","update","form","layout","initialValues","todo","dueDate","moment","Item","name","label","required","placeholder","format","disabledDate","current","startOf","disabledTime","disabledHours","start","end","result","i","push","range","splice","hours","showTime","headStyle","backgroundColor","Meta","Card","confirm","Modal","TodoCard","useState","intervalMs","setIntervalMs","forceUpdate","useEffect","timer","setInterval","clearInterval","handleUpdateFormSubmit","body","_id","Form","useForm","size","hoverable","width","margin","bodyStyle","extra","actions","icon","EditFilled","onClick","title","content","okText","okType","onOk","submit","DeleteFilled","danger","ExclamationCircleOutlined","cancelText","delete","description","diff","timeDiff","timeUnit","returnVal","detectRemainingTimeAndUnit","TodoList","unstableDispatch","useDispatch","useCallback","todoList","selector","useSelector","state","todos","handleDeleteTodo","id","method","url","_","deleteTodo","handleUpdateTodo","updateTodo","map","key","AddTodoForm","justifyContent","paddingLeft","PlusOutlined","htmlType","shape","Header","Layout","Content","Footer","App","className","position","zIndex","padding","minHeight","textAlign","Boolean","window","location","hostname","match","initialState","getTodosReducer","action","reducer","reducers","combineReducers","todoReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"qPAGaA,EAAW,kBAAM,SAACC,GAC7B,OAAOC,IACJC,IAAI,cACJC,MAAK,SAACC,GACLJ,ECJG,CACLK,KCHqB,YDIrBC,QDEkCF,EAAIG,KAAKA,UAE1CC,OAAM,SAACC,GACN,OAAOC,QAAQC,OAAOF,Q,sSGRrB,IAAMG,EAAYC,IAAOC,IAAV,KCqBPC,EAhBI,SAACC,GAClB,OACE,kBAACJ,EAAD,KACE,kBAACK,EAAA,EAAD,CACEC,aAAcF,EAAMG,UAAY,mBAAqB,UACrDC,MAAO,CAAEC,SAAU,MAErB,kBAAC,IAAD,CAAQC,eAAgBN,EAAMG,UAAWI,SAAUP,EAAMQ,eACzD,kBAACC,EAAA,EAAD,CACEP,aAAcF,EAAMG,UAAY,UAAY,mBAC5CC,MAAO,CAAEC,SAAU,Q,kBCgCZK,EA5CI,SAACV,GAmBlB,OACE,kBAAC,IAAD,CACEW,SAAU,SAACC,GAAD,OAAYZ,EAAMa,OAAOD,IACnCE,KAAMd,EAAMc,KACZC,OAAO,WACPC,cAAe,CACbC,KAAMjB,EAAMT,KAAK0B,MAAQjB,EAAMT,KAAK0B,KACpCC,QAASlB,EAAMT,KAAK2B,SAAWC,IAAOnB,EAAMT,KAAK2B,WAGnD,kBAAC,IAAKE,KAAN,CAAWC,KAAK,OAAOC,MAAM,OAAOC,UAAQ,GAC1C,kBAAC,IAAD,CAAOC,YAAY,UAErB,kBAAC,IAAKJ,KAAN,CAAWC,KAAK,UAAUC,MAAM,YAC9B,kBAAC,IAAD,CACEG,OAAO,mBACPC,aA1Ba,SAACC,GACpB,OAAOA,GAAWA,EAAUR,MAASS,QAAQ,QA0BvCC,aAvBiB,WACvB,MAAO,CACLC,cAAe,kBAdL,SAACC,EAAOC,GAEpB,IADA,IAAMC,EAAS,GACNC,EAAIH,EAAOG,EAAIF,EAAKE,IAC3BD,EAAOE,KAAKD,GAEd,OAAOD,EASgBG,CAAM,EAAG,IAAIC,OAAO,EAAGlB,MAASmB,YAsBjDC,SAAU,CAAEd,OAAQ,c,6LCxCvB,IAAM7B,EAAYC,IAAOC,IAAV,KAKE,SAACE,GAAD,OAClBA,EAAMG,UAAY,uBAAyB,2BAYpCqC,EAAY,SAACrC,GACxB,MAAO,CACLsC,gBAAiBtC,EAAY,sBAAwB,yBCRjDuC,EAASC,IAATD,KACAE,EAAYC,IAAZD,QAiJOE,EA1IE,SAAC9C,GAAW,IAAD,EACU+C,mBANvB,OAKa,mBACnBC,EADmB,KACPC,EADO,OAEFF,qBAAfG,EAFiB,oBAI1BC,qBAAU,WACR,IAAIC,EAAQC,aAAY,WACtBH,EAAY,MACXF,GACH,OAAO,WACLM,cAAcF,MAEf,CAACJ,IAEJ,IA0CMO,EAAyB,SAACC,GAC9BxD,EAAMa,OAAOb,EAAMT,KAAKkE,IAAKD,IAxDL,IDVFrD,ECUE,EAsEXuD,IAAKC,UAAb7C,EAtEmB,oBAwF1B,OACE,kBAAC,EAAD,CAAWX,UAAWH,EAAMT,KAAKY,WAC/B,kBAAC,IAAD,CACEyD,KAAK,QACLC,WAAS,EACTzD,MAAO,CACL0D,MAAO,IACPC,OAAQ,IAEVC,WD3GkB7D,EC2GGH,EAAMT,KAAKY,UD1G/B,CACLsC,gBAAiBtC,EACb,uBACA,0BCwGAqC,UAAWA,EAAUxC,EAAMT,KAAKY,WAChC8D,MACE,kBAAC,EAAD,CACE9D,UAAWH,EAAMT,KAAKY,UACtBK,aArDiB,WACzBR,EAAMa,OAAOb,EAAMT,KAAKkE,IAAK,CAC3BtD,WAAYH,EAAMT,KAAKY,eAsDrB+D,QAAS,CACP,kBAAC,IAAD,CACE7E,KAAK,UACL8E,KAAM,kBAACC,EAAA,EAAD,MACNC,QAtCV,WACEzB,EAAQ,CACN0B,MAAO,YACPH,KAAM,kBAACC,EAAA,EAAD,MACNG,QACE,kBAAC,EAAD,CACEhF,KAAMS,EAAMT,KACZsB,OAAQ0C,EACRzC,KAAMA,IAGV0D,OAAQ,SACRC,OAAQ,UACRC,KAAM,kBAAM5D,EAAK6D,cAsBb,QAOA,kBAAC,IAAD,CACEtF,KAAK,UACL8E,KAAM,kBAACS,EAAA,EAAD,MACNC,QAAM,EACNR,QA1DV,WACEzB,EAAQ,CACN0B,MAAO,oCACPH,KAAM,kBAACW,EAAA,EAAD,MACNN,OAAQ,MACRC,OAAQ,SACRM,WAAY,KACZL,KAAM,kBAAM1E,EAAMgF,OAAOhF,EAAMT,KAAKkE,UA+ChC,YAUF,kBAACf,EAAD,CACE4B,MAAOtE,EAAMT,KAAK0B,KAClBgE,aACGjF,EAAMT,KAAKY,WACZH,EAAMT,KAAK2B,UACVC,IAAOnB,EAAMT,KAAK2B,SAASgE,KAAK/D,QAAa,EAC1C,UApHqB,WACjC,IAAMgE,EAAW,SAACC,GAAD,OACfjE,IAAOnB,EAAMT,KAAK2B,SAASgE,KAAK/D,MAAUiE,IACtCC,EAAY,SAACD,GAAD,OAChBD,EAASC,GACT,IACAA,GACwB,IAAvBD,EAASC,GAAkB,GAAK,KACjC,cAEF,OAAID,EAAS,QA5BF,QA6BLnC,GACFC,EA9BO,OAgCFoC,EAAU,QAEfF,EAAS,SAjCD,OAkCNnC,GACFC,EAnCQ,MAqCHoC,EAAU,SAEfF,EAAS,WAtCC,MAuCRnC,GACFC,EAxCU,KA0CLoC,EAAU,WAEfF,EAAS,WA3CC,MA4CRnC,GACFC,EA7CU,KA+CLoC,EAAU,gBAJnB,EAyFYC,S,qPCtJT,IAAM1F,EAAYC,IAAOC,IAAV,KCuCPyF,EAlCE,WACf,IAAMC,EAAmBC,cACnBzG,EAAW0G,sBAAYF,EAAkB,IAGzCG,GAAWC,EAFAC,MAES,SAACC,GAAD,OAAWA,EAAMC,MAAMJ,YAEjDxC,qBAAU,WACRnE,EAASD,OACR,CAACC,IAEJ,IAAMgH,EAAmB,SAACC,GACxBjH,ETKsB,SAACiH,GAAD,OAAQ,SAACjH,GACjC,OAAOC,IAAM,CACXiH,OAAQ,SACRC,IAAI,cAAD,OAAgBF,KAClB9G,MAAK,SAACiH,GACPpH,EAASD,SSVAsH,CAAWJ,KAGhBK,EAAmB,SAACL,EAAIzC,GAC5BxE,ETUsB,SAACiH,EAAIzC,GAAL,OAAc,SAACxE,GACvC,OAAOC,IAAM,CACXiH,OAAQ,MACRC,IAAI,cAAD,OAAgBF,GACnB1G,KAAMiE,IACLrE,MAAK,SAACiH,GACPpH,EAASD,SShBAwH,CAAWN,EAAIzC,KAG1B,OACE,kBAAC,EAAD,KACGmC,GACCA,EAASa,KAAI,SAACvF,GAAD,OACX,kBAAC,EAAD,CACEwF,IAAKxF,EAAKwC,IACVlE,KAAM0B,EACN+D,OAAQ,SAACiB,GAAD,OAAQD,EAAiBC,IACjCpF,OAAQ,SAACoF,EAAIzC,GAAL,OAAc8C,EAAiBL,EAAIzC,W,SCExCkD,EA5BK,SAAC1G,GACnB,IAAMhB,EAAWyG,cAMjB,OACE,kBAAC,IAAD,CACErF,MAAO,CAAEuG,eAAgB,SAAUC,YAAa,QAChD7F,OAAO,SACPJ,SARiB,SAACC,GVGE,IAACK,EUFvBjC,GVEuBiC,EUFHL,EVEY,SAAC5B,GACnC,OAAOC,IAAM,CACXiH,OAAQ,OACRC,IAAK,aACL5G,KAAM0B,IACL9B,MAAK,SAACiH,GACPpH,EAASD,aUCP,kBAAC,IAAKqC,KAAN,CAAWC,KAAK,QACd,kBAAC,IAAD,CAAOG,YAAY,kBAErB,kBAAC,IAAKJ,KAAN,KACE,kBAAC,IAAD,CACE+C,KAAM,kBAAC0C,EAAA,EAAD,MACNxH,KAAK,UACLyH,SAAS,SACTC,MAAM,cCtBRC,EAA4BC,IAA5BD,OAAQE,EAAoBD,IAApBC,QAASC,EAAWF,IAAXE,OAuBVC,MArBf,WACE,OACE,kBAAC,IAAD,CAAQC,UAAU,UAChB,kBAACL,EAAD,CACE5G,MAAO,CACLkH,SAAU,QACVxD,MAAO,OACPyD,OAAQ,KACRC,QAAS,cAGX,kBAAC,EAAD,OAEF,kBAACN,EAAD,CAAS9G,MAAO,CAAEoH,QAAS,YAAaC,UAAW,UACjD,kBAAC,EAAD,OAEF,kBAACN,EAAD,CAAQ/G,MAAO,CAAEsH,UAAW,WAA5B,kCCbcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,4CChBAC,EAAe,CACnBrC,SAAU,IAGNsC,EAAkB,SAACnC,EAAOoC,GAAR,sBACnBpC,EADmB,CAEtBH,SAAUuC,EAAO5I,WAYJ6I,EATC,WAAmC,IAAlCrC,EAAiC,uDAAzBkC,EAAcE,EAAW,uCAChD,OAAQA,EAAO7I,MACb,IXZqB,YWanB,OAAO4I,EAAgBnC,EAAOoC,GAChC,QACE,OAAOpC,ICXPsC,GAAWC,YAAgB,CAC/BtC,MAAOuC,IAGHC,GAAmBX,OAAOY,sCAAwCC,IAGzDC,GAFDC,YAAYP,GAAUG,GAAiBK,YAAgBC,OCCrEC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,IACf,kBAAC,EAAD,OAEFM,SAASC,eAAe,SHoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjK,MAAK,SAAAkK,GACJA,EAAaC,gBAEd9J,OAAM,SAAAC,GACL8J,QAAQ9J,MAAMA,EAAM+J,c","file":"static/js/main.3dce9851.chunk.js","sourcesContent":["import * as actions from \"./actions\";\r\nimport axios from \"axios\";\r\n\r\nexport const getTodos = () => (dispatch) => {\r\n  return axios\r\n    .get(\"/api/todos\")\r\n    .then((res) => {\r\n      dispatch(actions.getTodosAction(res.data.data));\r\n    })\r\n    .catch((error) => {\r\n      return Promise.reject(error);\r\n    });\r\n};\r\n\r\nexport const createTodo = (todo) => (dispatch) => {\r\n  return axios({\r\n    method: \"post\",\r\n    url: \"/api/todos\",\r\n    data: todo,\r\n  }).then((_) => {\r\n    dispatch(getTodos());\r\n  });\r\n};\r\n\r\nexport const deleteTodo = (id) => (dispatch) => {\r\n  return axios({\r\n    method: \"delete\",\r\n    url: `/api/todos/${id}`,\r\n  }).then((_) => {\r\n    dispatch(getTodos());\r\n  });\r\n};\r\n\r\nexport const updateTodo = (id, body) => (dispatch) => {\r\n  return axios({\r\n    method: \"put\",\r\n    url: `/api/todos/${id}`,\r\n    data: body,\r\n  }).then((_) => {\r\n    dispatch(getTodos());\r\n  });\r\n};\r\n","import * as actionTypes from \"../allActionTypes\";\r\n\r\nexport const getTodosAction = (todos) => {\r\n  return {\r\n    type: actionTypes.GET_TODOS,\r\n    payload: todos,\r\n  };\r\n};\r\n","// TODO\r\nexport const GET_TODOS = \"GET_TODOS\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_LOG_OUT = \"AUTH_LOG_OUT\";\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 100px;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { Switch } from \"antd\";\r\nimport { CheckCircleTwoTone, CloseCircleTwoTone } from \"@ant-design/icons\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\nconst CardHeader = (props) => {\r\n  return (\r\n    <Container>\r\n      <CloseCircleTwoTone\r\n        twoToneColor={props.completed ? \"rgb(225,225,225)\" : \"#eb2f96\"}\r\n        style={{ fontSize: 25 }}\r\n      />\r\n      <Switch defaultChecked={props.completed} onChange={props.switchStatus} />\r\n      <CheckCircleTwoTone\r\n        twoToneColor={props.completed ? \"#52c41a\" : \"rgb(225,225,225)\"}\r\n        style={{ fontSize: 25 }}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardHeader;\r\n","import React from \"react\";\r\n\r\nimport { Form, Input, DatePicker } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nconst UpdateForm = (props) => {\r\n  const range = (start, end) => {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    return current && current < moment().startOf(\"day\");\r\n  };\r\n\r\n  const disabledDateTime = () => {\r\n    return {\r\n      disabledHours: () => range(0, 24).splice(0, moment().hours()),\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      onFinish={(values) => props.update(values)}\r\n      form={props.form}\r\n      layout=\"vertical\"\r\n      initialValues={{\r\n        todo: props.data.todo && props.data.todo,\r\n        dueDate: props.data.dueDate && moment(props.data.dueDate),\r\n      }}\r\n    >\r\n      <Form.Item name=\"todo\" label=\"Todo\" required>\r\n        <Input placeholder=\"Name\" />\r\n      </Form.Item>\r\n      <Form.Item name=\"dueDate\" label=\"Due Date\">\r\n        <DatePicker\r\n          format=\"YYYY-MM-DD HH:mm\"\r\n          disabledDate={disabledDate}\r\n          disabledTime={disabledDateTime}\r\n          showTime={{ format: \"HH:mm\" }}\r\n        />\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default UpdateForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  .ant-switch-checked {\r\n    background-color: #52c41a;\r\n  }\r\n  .ant-card-actions {\r\n    background-color: ${(props) =>\r\n      props.completed ? \"rgba(82,196,26,0.05)\" : \"rgba(235,47,150,0.05)\"};\r\n  }\r\n`;\r\n\r\nexport const bodyStyle = (completed) => {\r\n  return {\r\n    backgroundColor: completed\r\n      ? \"rgba(82,196,26,0.05)\"\r\n      : \"rgba(235,47,150,0.05)\",\r\n  };\r\n};\r\n\r\nexport const headStyle = (completed) => {\r\n  return {\r\n    backgroundColor: completed ? \"rgba(82,196,26,0.1)\" : \"rgba(235,47,150,0.1)\",\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Card, Button, Modal, Form } from \"antd\";\r\nimport {\r\n  DeleteFilled,\r\n  EditFilled,\r\n  ExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport moment from \"moment\";\r\n\r\nimport CardHeader from \"../CardHeader\";\r\nimport UpdateForm from \"../UpdateForm\";\r\nimport { Container, bodyStyle, headStyle } from \"./styles\";\r\n\r\nconst { Meta } = Card;\r\nconst { confirm } = Modal;\r\n\r\nconst DAY_MS = 86400000;\r\nconst HOUR_MS = 3600000;\r\nconst MINUTE_MS = 60000;\r\nconst SECOND_MS = 1000;\r\n\r\nconst TodoCard = (props) => {\r\n  const [intervalMs, setIntervalMs] = useState(DAY_MS);\r\n  const [, forceUpdate] = useState();\r\n\r\n  useEffect(() => {\r\n    let timer = setInterval(() => {\r\n      forceUpdate({});\r\n    }, intervalMs);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [intervalMs]);\r\n\r\n  const detectRemainingTimeAndUnit = () => {\r\n    const timeDiff = (timeUnit) =>\r\n      moment(props.data.dueDate).diff(moment(), timeUnit);\r\n    const returnVal = (timeUnit) =>\r\n      timeDiff(timeUnit) +\r\n      \" \" +\r\n      timeUnit +\r\n      (timeDiff(timeUnit) === 1 ? \"\" : \"s\") +\r\n      \" remaining\";\r\n\r\n    if (timeDiff(\"day\")) {\r\n      if (intervalMs !== DAY_MS) {\r\n        setIntervalMs(DAY_MS);\r\n      }\r\n      return returnVal(\"day\");\r\n    }\r\n    if (timeDiff(\"hour\")) {\r\n      if (intervalMs !== HOUR_MS) {\r\n        setIntervalMs(HOUR_MS);\r\n      }\r\n      return returnVal(\"hour\");\r\n    }\r\n    if (timeDiff(\"minute\")) {\r\n      if (intervalMs !== MINUTE_MS) {\r\n        setIntervalMs(MINUTE_MS);\r\n      }\r\n      return returnVal(\"minute\");\r\n    }\r\n    if (timeDiff(\"second\")) {\r\n      if (intervalMs !== SECOND_MS) {\r\n        setIntervalMs(SECOND_MS);\r\n      }\r\n      return returnVal(\"second\");\r\n    }\r\n  };\r\n\r\n  const handleSwitchChange = () => {\r\n    props.update(props.data._id, {\r\n      completed: !props.data.completed,\r\n    });\r\n  };\r\n\r\n  const handleUpdateFormSubmit = (body) => {\r\n    props.update(props.data._id, body);\r\n  };\r\n\r\n  function showDeleteConfirm() {\r\n    confirm({\r\n      title: \"Are you sure to remove this todo?\",\r\n      icon: <ExclamationCircleOutlined />,\r\n      okText: \"Yes\",\r\n      okType: \"danger\",\r\n      cancelText: \"No\",\r\n      onOk: () => props.delete(props.data._id),\r\n    });\r\n  }\r\n\r\n  const [form] = Form.useForm();\r\n  function showUpdateConfirm() {\r\n    confirm({\r\n      title: \"Edit Todo\",\r\n      icon: <EditFilled />,\r\n      content: (\r\n        <UpdateForm\r\n          data={props.data}\r\n          update={handleUpdateFormSubmit}\r\n          form={form}\r\n        />\r\n      ),\r\n      okText: \"Update\",\r\n      okType: \"warning\",\r\n      onOk: () => form.submit(),\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Container completed={props.data.completed}>\r\n      <Card\r\n        size=\"small\"\r\n        hoverable\r\n        style={{\r\n          width: 300,\r\n          margin: 16,\r\n        }}\r\n        bodyStyle={bodyStyle(props.data.completed)}\r\n        headStyle={headStyle(props.data.completed)}\r\n        extra={\r\n          <CardHeader\r\n            completed={props.data.completed}\r\n            switchStatus={handleSwitchChange}\r\n          />\r\n        }\r\n        actions={[\r\n          <Button\r\n            type=\"warning\"\r\n            icon={<EditFilled />}\r\n            onClick={showUpdateConfirm}\r\n          >\r\n            Edit\r\n          </Button>,\r\n          <Button\r\n            type=\"primary\"\r\n            icon={<DeleteFilled />}\r\n            danger\r\n            onClick={showDeleteConfirm}\r\n          >\r\n            Delete\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Meta\r\n          title={props.data.todo}\r\n          description={\r\n            !props.data.completed &&\r\n            props.data.dueDate &&\r\n            (moment(props.data.dueDate).diff(moment()) <= 0\r\n              ? \"Overdue\"\r\n              : detectRemainingTimeAndUnit())\r\n          }\r\n        />\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TodoCard;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  /* flex-direction: column;\r\n  align-items: center; */\r\n  flex-wrap: wrap;\r\n\r\n  @media screen and (max-width: 760px) {\r\n    justify-content: center;\r\n  }\r\n`;\r\n","import React, { useEffect, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { getTodos, deleteTodo, updateTodo } from \"../../redux/todos/api\";\r\nimport TodoCard from \"./components/Card\";\r\nimport { Container } from \"./styles\";\r\n\r\nconst TodoList = () => {\r\n  const unstableDispatch = useDispatch();\r\n  const dispatch = useCallback(unstableDispatch, []);\r\n  const selector = useSelector;\r\n\r\n  const todoList = selector((state) => state.todos.todoList);\r\n\r\n  useEffect(() => {\r\n    dispatch(getTodos());\r\n  }, [dispatch]);\r\n\r\n  const handleDeleteTodo = (id) => {\r\n    dispatch(deleteTodo(id));\r\n  };\r\n\r\n  const handleUpdateTodo = (id, body) => {\r\n    dispatch(updateTodo(id, body));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {todoList &&\r\n        todoList.map((todo) => (\r\n          <TodoCard\r\n            key={todo._id}\r\n            data={todo}\r\n            delete={(id) => handleDeleteTodo(id)}\r\n            update={(id, body) => handleUpdateTodo(id, body)}\r\n          />\r\n        ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { Input, Button, Form } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nimport { createTodo } from \"../../../../redux/todos/api\";\r\n\r\nconst AddTodoForm = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (values) => {\r\n    dispatch(createTodo(values));\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      style={{ justifyContent: \"center\", paddingLeft: \"16px\" }}\r\n      layout=\"inline\"\r\n      onFinish={handleSubmit}\r\n    >\r\n      <Form.Item name=\"todo\">\r\n        <Input placeholder=\"Add new todo\" />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button\r\n          icon={<PlusOutlined />}\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          shape=\"circle\"\r\n        />\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AddTodoForm;\r\n","import React from \"react\";\n\nimport { Layout } from \"antd\";\n\nimport TodoList from \"./pages/TodoList\";\nimport AddTodoForm from \"./pages/TodoList/components/Form\";\n\nconst { Header, Content, Footer } = Layout;\n\nfunction App() {\n  return (\n    <Layout className=\"layout\">\n      <Header\n        style={{\n          position: \"fixed\",\n          width: \"100%\",\n          zIndex: \"10\",\n          padding: \"16px 50px\",\n        }}\n      >\n        <AddTodoForm />\n      </Header>\n      <Content style={{ padding: \"60px 50px\", minHeight: \"100vh\" }}>\n        <TodoList />\n      </Content>\n      <Footer style={{ textAlign: \"center\" }}>Created by Ali Mert ©2020</Footer>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../allActionTypes\";\r\n\r\nconst initialState = {\r\n  todoList: [],\r\n};\r\n\r\nconst getTodosReducer = (state, action) => ({\r\n  ...state,\r\n  todoList: action.payload,\r\n});\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.GET_TODOS:\r\n      return getTodosReducer(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport todoReducer from \"./todos/reducer\";\r\n\r\nconst reducers = combineReducers({\r\n  todos: todoReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"antd/dist/antd.css\";\nimport \"antd-button-color/dist/css/style.css\";\n\nimport store from \"./redux/configureStore\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}